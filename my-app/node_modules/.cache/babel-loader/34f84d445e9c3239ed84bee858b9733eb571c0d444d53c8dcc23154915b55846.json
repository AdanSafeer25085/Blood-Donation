{"ast":null,"code":"var _jsxFileName = \"/Users/kpklaptops/Desktop/Blood/my-app/src/Components/Form/LoginUserDetails.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Dashboard from '../Dashboard/Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserDetails({\n  user,\n  onLogout\n}) {\n  _s();\n  const [location, setLocation] = useState(user.location);\n  const [mobileNumber, setMobileNumber] = useState(user.mobileNumber);\n  const [message, setMessage] = useState(\"\");\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [messageType, setMessageType] = useState(\"\"); // 'success' or 'error'\n\n  const handleUpdate = async () => {\n    if (!location.trim() || !mobileNumber.trim()) {\n      setMessage(\"Location and mobile number cannot be empty.\");\n      setMessageType(\"error\");\n      return;\n    }\n    if (!/^(\\+92|0)?3[0-9]{9}$/.test(mobileNumber.replace(/\\s/g, \"\"))) {\n      setMessage(\"Please enter a valid Pakistani mobile number (e.g., 03001234567)\");\n      setMessageType(\"error\");\n      return;\n    }\n    setIsUpdating(true);\n    setMessage(\"\");\n    try {\n      const response = await axios.post(\"http://localhost:5000/update-user-details\", {\n        userId: user.id,\n        location,\n        mobileNumber\n      });\n      setMessage(response.data.message);\n      setMessageType(\"success\");\n\n      // Update localStorage with new data\n      const updatedUser = {\n        ...user,\n        location,\n        mobileNumber\n      };\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to update user details.\");\n      setMessageType(\"error\");\n    } finally {\n      setIsUpdating(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    user: user,\n    onLogout: onLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 10\n  }, this);\n}\n_s(UserDetails, \"2+yfWUPQWijlFPdkHYRfqVjrC20=\");\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["useState","axios","Dashboard","jsxDEV","_jsxDEV","UserDetails","user","onLogout","_s","location","setLocation","mobileNumber","setMobileNumber","message","setMessage","isUpdating","setIsUpdating","messageType","setMessageType","handleUpdate","trim","test","replace","response","post","userId","id","data","updatedUser","localStorage","setItem","JSON","stringify","error","_error$response","_error$response$data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kpklaptops/Desktop/Blood/my-app/src/Components/Form/LoginUserDetails.js"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Dashboard from '../Dashboard/Dashboard';\r\n\r\nfunction UserDetails({ user, onLogout }) {\r\n  const [location, setLocation] = useState(user.location);\r\n  const [mobileNumber, setMobileNumber] = useState(user.mobileNumber);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [messageType, setMessageType] = useState(\"\"); // 'success' or 'error'\r\n\r\n  const handleUpdate = async () => {\r\n    if (!location.trim() || !mobileNumber.trim()) {\r\n      setMessage(\"Location and mobile number cannot be empty.\");\r\n      setMessageType(\"error\");\r\n      return;\r\n    }\r\n\r\n    if (!/^(\\+92|0)?3[0-9]{9}$/.test(mobileNumber.replace(/\\s/g, \"\"))) {\r\n      setMessage(\"Please enter a valid Pakistani mobile number (e.g., 03001234567)\");\r\n      setMessageType(\"error\");\r\n      return;\r\n    }\r\n\r\n    setIsUpdating(true);\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/update-user-details\",\r\n        { userId: user.id, location, mobileNumber }\r\n      );\r\n      setMessage(response.data.message);\r\n      setMessageType(\"success\");\r\n      \r\n      // Update localStorage with new data\r\n      const updatedUser = { ...user, location, mobileNumber };\r\n      localStorage.setItem(\"user\", JSON.stringify(updatedUser));\r\n    } catch (error) {\r\n      setMessage(error.response?.data?.error || \"Failed to update user details.\");\r\n      setMessageType(\"error\");\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  return <Dashboard user={user} onLogout={onLogout} />;\r\n}\r\n\r\nexport default UserDetails;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACM,IAAI,CAACG,QAAQ,CAAC;EACvD,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACM,IAAI,CAACK,YAAY,CAAC;EACnE,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD,MAAMmB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACV,QAAQ,CAACW,IAAI,CAAC,CAAC,IAAI,CAACT,YAAY,CAACS,IAAI,CAAC,CAAC,EAAE;MAC5CN,UAAU,CAAC,6CAA6C,CAAC;MACzDI,cAAc,CAAC,OAAO,CAAC;MACvB;IACF;IAEA,IAAI,CAAC,sBAAsB,CAACG,IAAI,CAACV,YAAY,CAACW,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,EAAE;MACjER,UAAU,CAAC,kEAAkE,CAAC;MAC9EI,cAAc,CAAC,OAAO,CAAC;MACvB;IACF;IAEAF,aAAa,CAAC,IAAI,CAAC;IACnBF,UAAU,CAAC,EAAE,CAAC;IAEd,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAC/B,2CAA2C,EAC3C;QAAEC,MAAM,EAAEnB,IAAI,CAACoB,EAAE;QAAEjB,QAAQ;QAAEE;MAAa,CAC5C,CAAC;MACDG,UAAU,CAACS,QAAQ,CAACI,IAAI,CAACd,OAAO,CAAC;MACjCK,cAAc,CAAC,SAAS,CAAC;;MAEzB;MACA,MAAMU,WAAW,GAAG;QAAE,GAAGtB,IAAI;QAAEG,QAAQ;QAAEE;MAAa,CAAC;MACvDkB,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,WAAW,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACdrB,UAAU,CAAC,EAAAoB,eAAA,GAAAD,KAAK,CAACV,QAAQ,cAAAW,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBP,IAAI,cAAAQ,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,gCAAgC,CAAC;MAC3Ef,cAAc,CAAC,OAAO,CAAC;IACzB,CAAC,SAAS;MACRF,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBAAOZ,OAAA,CAACF,SAAS;IAACI,IAAI,EAAEA,IAAK;IAACC,QAAQ,EAAEA;EAAS;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtD;AAAC/B,EAAA,CA3CQH,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AA6CpB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
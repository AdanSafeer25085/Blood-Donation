{"ast":null,"code":"import React,{createContext,useState,useContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const LanguageContext=/*#__PURE__*/createContext();export const LanguageProvider=_ref=>{let{children}=_ref;const[isEnglish,setIsEnglish]=useState(true);const toggleLanguage=()=>{setIsEnglish(!isEnglish);};return/*#__PURE__*/_jsx(LanguageContext.Provider,{value:{isEnglish,toggleLanguage},children:children});};export const useLanguage=()=>useContext(LanguageContext);","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","LanguageContext","LanguageProvider","_ref","children","isEnglish","setIsEnglish","toggleLanguage","Provider","value","useLanguage"],"sources":["C:/Users/Rajpoot/Desktop/untitled folder/my-app/src/Components/Header/Nav/LanguageContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from \"react\";\n\nconst LanguageContext = createContext();\n\nexport const LanguageProvider = ({ children }) => {\n  const [isEnglish, setIsEnglish] = useState(true);\n\n  const toggleLanguage = () => {\n    setIsEnglish(!isEnglish);\n  };\n\n  return (\n    <LanguageContext.Provider value={{ isEnglish, toggleLanguage }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport const useLanguage = () => useContext(LanguageContext);\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,eAAe,cAAGL,aAAa,CAAC,CAAC,CAEvC,MAAO,MAAM,CAAAM,gBAAgB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC3C,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAEhD,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAC3BD,YAAY,CAAC,CAACD,SAAS,CAAC,CAC1B,CAAC,CAED,mBACEL,IAAA,CAACC,eAAe,CAACO,QAAQ,EAACC,KAAK,CAAE,CAAEJ,SAAS,CAAEE,cAAe,CAAE,CAAAH,QAAA,CAC5DA,QAAQ,CACe,CAAC,CAE/B,CAAC,CAED,MAAO,MAAM,CAAAM,WAAW,CAAGA,CAAA,GAAMZ,UAAU,CAACG,eAAe,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}